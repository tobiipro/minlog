{"version":3,"sources":["../../src/serializers/time.ts"],"names":[],"mappings":"4JAAA;AACA;AACA,yE;;AAEA,IAAI,qBAAqB,GAAG,UAAS,SAAT,EAAoD;AAC9E,MAAI,CAAC,yBAAE,QAAF,CAAW,SAAX,CAAD,IAA0B,SAAS,GAAG,CAA1C,EAA6C;AAC3C;AACD;;AAED,MAAI,MAAM,GAAG,qBAAO,SAAP,CAAb;AACA,MAAI,CAAC,MAAM,CAAC,OAAP,EAAL,EAAuB;AACrB;AACD;;AAED,SAAO,MAAP;AACD,CAXD,C;;AAaO,IAAI,aAAa,GAAG,YAAW;AACpC,SAAO,gBAAe,EAAC,KAAD,EAAf,EAAwB;AAC7B,QAAI;AACF,MAAA,KADE;AAEF,MAAA,UAFE;AAGF,MAAA,QAHE;AAIA,IAAA,KAJJ;;AAMA,QAAI,UAAU,GAAG,8BAAsB,KAAtB,CAAjB;AACA,QAAI,yBAAE,WAAF,CAAc,UAAd,CAAJ,EAA+B;AAC7B,aAAO,KAAP;AACD;;AAED,IAAA,KAAK,CAAC,KAAN,GAAc;AACZ,MAAA,KAAK,EAAE,UAAU,CAAC,WAAX,EADK;AAEZ,MAAA,UAAU,EAAE,UAAU,CAAC,WAAX,CAAuB,IAAvB,CAFA;AAGZ,MAAA,IAAI,EAAE,wBAAS,EAAT,CAAY,KAAZ,EAHM;AAIZ,MAAA,UAAU,EAAE,UAAU,CAAC,SAAX,EAJA,EAAd;;;AAOA,QAAI,eAAe,GAAG,8BAAsB,UAAtB,CAAtB;AACA,QAAI,yBAAE,WAAF,CAAc,eAAd,CAAJ,EAAoC;AAClC,aAAO,KAAP;AACD;;AAED,IAAA,KAAK,CAAC,UAAN,GAAmB;AACjB,MAAA,KAAK,EAAE,eAAe,CAAC,WAAhB,EADU;AAEjB,MAAA,UAAU,EAAE,eAAe,CAAC,WAAhB,CAA4B,IAA5B,CAFK;AAGjB,MAAA,IAAI,EAAE,wBAAS,EAAT,CAAY,KAAZ,EAHW;AAIjB,MAAA,UAAU,EAAE,eAAe,CAAC,SAAhB,EAJK,EAAnB;;;AAOA,QAAI,aAAa,GAAG,8BAAsB,QAAtB,CAApB;AACA,QAAI,yBAAE,WAAF,CAAc,aAAd,CAAJ,EAAkC;AAChC,aAAO,KAAP;AACD;;AAED,IAAA,KAAK,CAAC,QAAN,GAAiB;AACf,MAAA,KAAK,EAAE,aAAa,CAAC,WAAd,EADQ;AAEf,MAAA,UAAU,EAAE,aAAa,CAAC,WAAd,CAA0B,IAA1B,CAFG;AAGf,MAAA,IAAI,EAAE,wBAAS,EAAT,CAAY,KAAZ,EAHS;AAIf,MAAA,UAAU,EAAE,aAAa,CAAC,SAAd,EAJG,EAAjB;;;AAOA,QAAI,QAAQ,GAAG,gBAAO,QAAP,CAAgB,QAAQ,GAAG,UAA3B,CAAf;AACA,IAAA,KAAK,CAAC,SAAN,GAAkB;AAChB,MAAA,KAAK,EAAE,QAAQ,CAAC,WAAT,EADS;AAEhB,MAAA,KAAK,EAAE,QAAQ,CAAC,QAAT,EAFS;AAGhB,MAAA,EAAE,EAAE,QAAQ,CAAC,cAAT,EAHY,EAAlB;;;AAMA,WAAO,KAAP;AACD,GAnDD;AAoDD,CArDM,C","file":"time.js","sourcesContent":["import _ from 'lodash-firecloud';\nimport moment from 'moment';\nimport momentTz from 'moment-timezone';\n\nlet _maybeToDefinedMoment = function(timestamp: number | string): moment.Moment {\n  if (!_.isNumber(timestamp) || timestamp < 0) {\n    return;\n  }\n\n  let result = moment(timestamp);\n  if (!result.isValid()) {\n    return;\n  }\n\n  return result;\n};\n\nexport let serializeTime = function() {\n  return async function({entry}) {\n    let {\n      _time,\n      _timeStart,\n      _timeEnd\n    } = entry;\n\n    let momentTime = _maybeToDefinedMoment(_time);\n    if (_.isUndefined(momentTime)) {\n      return entry;\n    }\n\n    entry._time = {\n      stamp: momentTime.toISOString(),\n      localStamp: momentTime.toISOString(true),\n      zone: momentTz.tz.guess(),\n      utc_offset: momentTime.utcOffset()\n    };\n\n    let momentTimeStart = _maybeToDefinedMoment(_timeStart);\n    if (_.isUndefined(momentTimeStart)) {\n      return entry;\n    }\n\n    entry._timeStart = {\n      stamp: momentTimeStart.toISOString(),\n      localStamp: momentTimeStart.toISOString(true),\n      zone: momentTz.tz.guess(),\n      utc_offset: momentTimeStart.utcOffset()\n    };\n\n    let momentTimeEnd = _maybeToDefinedMoment(_timeEnd);\n    if (_.isUndefined(momentTimeEnd)) {\n      return entry;\n    }\n\n    entry._timeEnd = {\n      stamp: momentTimeEnd.toISOString(),\n      localStamp: momentTimeEnd.toISOString(true),\n      zone: momentTz.tz.guess(),\n      utc_offset: momentTimeEnd.utcOffset()\n    };\n\n    let duration = moment.duration(_timeEnd - _timeStart);\n    entry._duration = {\n      stamp: duration.toISOString(),\n      human: duration.humanize(),\n      ms: duration.asMilliseconds()\n    };\n\n    return entry;\n  };\n};\n\nexport default serializeTime;\n"]}