{"version":3,"sources":["../src/minlog.ts"],"names":[],"mappings":"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","file":"minlog.js","sourcesContent":["import _ from 'lodash-firecloud';\nimport defaultLevels from './default-levels';\n\nimport {\n  MinLogArg,\n  MinLogEntry,\n  MinLogLevel,\n  MinLogLevelCode,\n  MinLogLevelName,\n  MinLogLevelNameToCode,\n  MinLogListener,\n  MinLogOptions,\n  MinLogRawEntry,\n  MinLogSerializer\n} from './types';\n\nimport {\n  Fn,\n  InstanceReplace,\n  MaybePromise\n} from 'lodash-firecloud/types';\n\ninterface MinLogLogFn {\n  (...args: MinLogArg[]): ReturnType<MinLog['log']>;\n}\n\ntype MinLogDefaultLevelLogFns = {\n  [TKey in keyof typeof defaultLevels]: MinLogLogFn;\n};\n\nexport class BaseMinLog {\n  _queue: Fn<Promise<void>, []>[] = [];\n\n  _queueFlushing: Promise<void>;\n\n  serializers: MinLogSerializer[] = [];\n\n  listeners: MinLogListener[] = [];\n\n  levels: MinLogLevelNameToCode = defaultLevels;\n\n  requireRawEntry: boolean = false;\n\n  requireSrc: boolean = false;\n\n  time: MinLogLogFn;\n\n  constructor(options: MinLogOptions = {}) {\n    _.mergeConcatArrays(this, options);\n\n    _.forEach(this.levels, (levelCode, levelName) => {\n      // prefer not using _.bind or any other external function\n      // in order to improve function name detection via _.getStackTrace below\n      this[levelName] = ((...args) => this.log(levelCode, ...args)) as MinLogLogFn;\n    });\n  }\n\n  child(childOptions: MinLogOptions = {}): MinLog {\n    let serializers = [\n      ...this.serializers,\n      ...childOptions.serializers\n    ];\n    let listeners = [\n      ...this.listeners,\n      ...childOptions.listeners\n    ];\n\n    let childLogger = new (this.constructor as typeof MinLog)(_.assign({}, childOptions, {\n      serializers,\n      listeners\n    }));\n\n    return childLogger;\n  }\n\n  levelIsBeyondGroup(\n    levelCodeOrName: MinLogLevel,\n    groupCodeOrName: MinLogLevel\n  ): boolean {\n    let levelCode = this.levelToLevelCode(levelCodeOrName);\n    let maxLevelCode = this.maxLevelCodeInGroup(groupCodeOrName);\n    return levelCode > maxLevelCode;\n  }\n\n  levelToLevelCode(levelCodeOrName: MinLogLevel): MinLogLevelCode {\n    if (_.isNumber(levelCodeOrName)) {\n      let levelCode = levelCodeOrName;\n      return levelCode;\n    }\n\n    let levelName = _.toLower(levelCodeOrName);\n    if (/^lvl[0-9]+$/.test(levelName)) {\n      let levelCodeStr = _.replace(levelName, /^lvl/, '');\n      let levelCode = _.toInteger(levelCodeStr);\n      return levelCode;\n    }\n\n    if (_.isUndefined(this.levels[levelName])) {\n      throw new Error(`Unknown level name ${levelName}. Known: ${_.keys(this.levels)}.`);\n    }\n\n    return this.levels[levelName];\n  }\n\n  levelToLevelName(levelCodeOrName: MinLogLevel): MinLogLevelName {\n    if (_.isString(levelCodeOrName)) {\n      let levelName = _.toLower(levelCodeOrName);\n\n      if (_.isUndefined(this.levels[levelName])) {\n        throw new Error(`Unknown level name ${levelName}. Known: ${_.keys(this.levels)}.`);\n      }\n\n      return levelName;\n    }\n\n    let levelCode = levelCodeOrName;\n    let levelName = _.defaultTo(_.invert(this.levels)[levelCode], `lvl${levelCode}`);\n    return levelName;\n  }\n\n  maxLevelCodeInGroup(levelCodeOrName: MinLogLevel): MinLogLevelCode {\n    let levelCode = this.levelToLevelCode(levelCodeOrName);\n\n    // round up levelCode to next level group, not inclusive\n    let maxLevelCodeGroup = _.floor(levelCode / 10) + 1;\n    let maxLevelCode = maxLevelCodeGroup * 10 - 1;\n    return maxLevelCode;\n  }\n\n  async flush(): Promise<void> {\n    await this._queueFlushing;\n\n    let deferred = _.deferred<void>();\n    this._queueFlushing = deferred.promise;\n\n    let flushed = false;\n    this._queue.push(async function() {\n      flushed = true;\n    });\n\n    // eslint-disable-next-line no-unmodified-loop-condition, @typescript-eslint/no-unnecessary-condition\n    while (!flushed) {\n      let fn = this._queue.shift();\n      await fn();\n    }\n\n    deferred.resolve();\n    this._queueFlushing = undefined;\n  }\n\n  log(levelCodeOrName: MinLogLevel, ...args: MinLogArg[]): {\n    promise: Promise<void>;\n  } {\n    let levelCode: MinLogLevelCode;\n    if (_.isString(levelCodeOrName)) {\n      levelCode = this.levels[_.toLower(levelCodeOrName)];\n    } else {\n      levelCode = levelCodeOrName;\n    }\n\n    let src: {\n      file: string;\n      line: number;\n      function: string;\n    };\n\n    if (this.requireSrc) {\n      // handle https://github.com/tobiipro/babel-preset-firecloud#babel-plugin-firecloud-src-arg-default-config-needed\n      let maybeBabelSrcArg = args[0] as any;\n      let babelSrcAbsoluteFilename = maybeBabelSrcArg?._babelSrc?.file as string;\n      if (!_.startsWith(babelSrcAbsoluteFilename, '/')) {\n        babelSrcAbsoluteFilename = undefined;\n      }\n\n      let callSites = _.getStackTrace(5);\n      let callSite = _.find(callSites, function(callSite) {\n        let filename = callSite.getFileName();\n\n        if (_.isDefined(babelSrcAbsoluteFilename)) {\n          let matchesBabelFilename = filename === babelSrcAbsoluteFilename;\n          if (matchesBabelFilename) {\n            return true;\n          }\n        } else {\n          let isExternal = filename !== __filename;\n          if (isExternal) {\n            return true;\n          }\n        }\n\n        return false;\n      });\n\n      if (_.isDefined(callSite)) {\n        src = {\n          file: callSite.getFileName(),\n          line: callSite.getLineNumber(),\n          function: _.defaultTo(callSite.getFunctionName(), undefined)\n        };\n      }\n    }\n\n    let entry: MinLogEntry = {\n      _args: args,\n      _time: Date.now(),\n      _level: levelCode,\n      _src: src\n    };\n\n    _.forEach(args, function(arg, index) {\n      let amendEntry: object = {\n        [`_arg${index}`]: arg\n      };\n\n      if (_.isError(arg) && _.isUndefined(entry.err)) {\n        amendEntry = {\n          err: arg\n        };\n      } else if (_.isString(arg) && _.isUndefined(entry.msg)) {\n        amendEntry = {\n          msg: arg\n        };\n      } else if (_.isPlainObject(arg)) {\n        arg = arg as object;\n        amendEntry = arg;\n      }\n\n      _.merge(entry, amendEntry);\n    });\n\n    let rawEntry: MinLogRawEntry;\n    if (this.requireRawEntry) {\n      rawEntry = _.cloneDeep(entry) as unknown as MinLogRawEntry;\n    }\n\n    let deferred = _.deferred<void>();\n    this._queue.push(async () => {\n      for (let serializer of this.serializers) {\n        entry = await serializer({entry, logger: this as unknown as MinLog, rawEntry});\n        if (_.isUndefined(entry)) {\n          break;\n        }\n      }\n\n      if (_.isUndefined(entry)) {\n        return;\n      }\n\n      for (let listener of this.listeners) {\n        await listener({entry, logger: this as unknown as MinLog, rawEntry});\n      }\n\n      deferred.resolve();\n    });\n\n    _.defer(async () => {\n      await this.flush();\n    });\n\n    return {\n      promise: deferred.promise\n    };\n  }\n\n  // trackTime(...logArgs, fn)\n  /* eslint-disable lines-between-class-members, no-dupe-class-members */\n  trackTime<TFn extends Fn>(fn: TFn): ReturnType<TFn>;\n  trackTime<TFn extends Fn>(_arg1: MinLogArg, fn: TFn): ReturnType<TFn>;\n  trackTime<TFn extends Fn>(_arg1: MinLogArg, _arg2: MinLogArg, fn: TFn): ReturnType<TFn>;\n  trackTime<TFn extends Fn>(_arg1: MinLogArg, _arg2: MinLogArg, _arg3: MinLogArg, fn: TFn): ReturnType<TFn>;\n  trackTime<TFn extends Fn>(\n    _arg1: MinLogArg, _arg2: MinLogArg, _arg3: MinLogArg, _arg4: MinLogArg,\n    fn: TFn\n  ): ReturnType<TFn>;\n  trackTime<TFn extends Fn>(\n    _arg1: MinLogArg, _arg2: MinLogArg, _arg3: MinLogArg, _arg4: MinLogArg, _arg5: MinLogArg,\n    fn: TFn\n  ): ReturnType<TFn>;\n  /* eslint-enable lines-between-class-members, no-dupe-class-members */\n\n  // eslint-disable-next-line no-dupe-class-members\n  trackTime(...args: (MinLogArg | Fn)[]): MaybePromise<any> {\n    let fn = args.pop() as Fn<MaybePromise<any>>;\n    args.push({\n      _timeStart: Date.now()\n    });\n\n    this.time(...args);\n\n    let result = fn();\n    _.defer(async () => {\n      try {\n        await result;\n      } catch {\n      }\n\n      args.push({\n        _timeEnd: Date.now()\n      });\n\n      this.time(...args);\n    });\n\n    return result;\n  }\n}\n\n// instance type\nexport type MinLog = BaseMinLog & MinLogDefaultLevelLogFns;\n\n// constructor type\nexport type MinLogConstructor = InstanceReplace<typeof BaseMinLog, MinLog>;\n\nexport let MinLog = BaseMinLog as MinLogConstructor;\n\nexport default MinLog;\n"]}